# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: 'Python package'
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

jobs:
  build:
    name: python
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: 'read'
      id-token: 'write'
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9.12"]
        
    steps:
       # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v0
      with:
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_ID }}
        service_account: ${{ secrets.SERVICE_ACCOUNT }}
        export_default_credentials: true
    - name: Setup GCloud
    - uses: google-github-actions/setup-gcloud@v0.2.1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        python -m pip install apache_beam[gcp]
        pip install google-apitools
        
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
   # - name: Test with pytest
      #run: |
        #pytest
    - name : creating template
      run: |
        python main.py --runner DataflowRunner --temp_location gs://satesttemp/tempdata --template_location gs://satesttemplate/templates/df-cust-template-gcs-bq-parquet --region europe-west1 --subnetwork projects/terraform-practice2/regions/europe-west1/subnetworks/tf-stockbalanceonline-subnet --staging_location gs://sateststagging/staging --project terraform-practice2  --setup_file './setup.py' --worker_machine_type 'n1-standard-4' --max_num_workers 5 --num_workers 1
      working-directory: ./cloud_dataflow
    

